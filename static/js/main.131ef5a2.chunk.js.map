{"version":3,"sources":["components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["renderData","data","className","map","item","index","title","Pagination","useState","setData","currentPage","setCurrentPage","itemPerPage","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","maxNumberLimit","setMaxNumberLimit","minNumberLimit","setMinNumberLimit","pageNumberLimit","rederPageNumber","number","style","padding","background","color","marginLeft","cursor","onClick","handleClick","handleClickNext","handleClickPrev","btnIncre","btnDecre","useEffect","fetch","then","respon","json","display","disabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEMA,EAAa,SAACC,GAClB,OACE,oBAAIC,UAAU,cAAd,SACGD,EAAKE,KAAI,SAACC,EAAMC,GACf,OAAO,6BAAiBD,EAAKE,OAAbD,SA0FTE,EArFI,WAKjB,IAJA,MAAwBC,mBAAS,IAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAAsCD,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAsCH,mBAAS,IAA/C,mBAAOI,EAAP,KACMC,GADN,KACc,IACLC,EAAI,EAAGA,GAAKC,KAAKC,KAAKf,EAAKgB,OAASL,GAAcE,IACzDD,EAAMK,KAAKJ,GAEb,IAAMK,EAAkBT,EAAcE,EAChCQ,EAAmBD,EAAkBP,EACrCS,EAAepB,EAAKqB,MAAMF,EAAkBD,GAClD,EAA4CX,mBAAS,GAArD,mBAAOe,EAAP,KAAuBC,EAAvB,KACA,EAA4ChB,mBAAS,GAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KACA,EAA8ClB,mBAAS,GAAvD,mBAAOmB,EAAP,KACMC,GADN,KACwBf,EAAMV,KAAI,SAAC0B,EAAQxB,GACzC,GAAIwB,EAASN,EAAiB,GAAKM,EAASJ,EAC1C,OACE,oBACEK,MAAO,CACLC,QAAS,MACTC,WAAY,MACZC,MAAO,OACPC,WAAY,MACZC,OAAQ,WAEVjC,UAAWQ,IAAgBmB,EAAS,SAAW,KAE/CO,QAAS,kBAAMC,EAAYR,IAV7B,SAYGA,GAHIxB,OAQPgC,EAAc,SAACR,GACnBlB,EAAekB,IAEXS,EAAkB,WACtB3B,EAAeD,EAAc,GACzBA,EAAc,EAAIa,IACpBC,EAAkBD,EAAiBI,GACnCD,EAAkBD,EAAiBE,KAGjCY,EAAkB,WACtB5B,EAAeD,EAAc,IACxBA,EAAc,GAAKiB,IAAoB,IAC1CH,EAAkBD,EAAiBI,GACnCD,EAAkBD,EAAiBE,KAGnCa,EAAW,KACX3B,EAAMI,OAASM,IACjBiB,EAAW,oBAAIJ,QAASE,EAAb,qBAEb,IAAIG,EAAW,KASf,OARIhB,GAAkB,IACpBgB,EAAW,oBAAIL,QAASG,EAAb,qBAEbG,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACE,GAAD,OAAUrC,EAAQqC,QACzB,IAED,gCACG9C,EAAWqB,GACZ,sBAAKS,MAAO,CAAEiB,QAAS,QAAvB,UACE,wBAAQC,SAAUtC,GAAe,EAAG0B,QAAS,kBAAMG,KAAnD,kBAGCE,EACAb,EACAY,EACD,wBACEQ,SAAUtC,GAAeG,EAAMI,OAC/BmB,QAAS,kBAAME,KAFjB,yBCzEOW,MATf,WACE,OACE,sBAAK/C,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,QCKSgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.131ef5a2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst renderData = (data) => {\r\n  return (\r\n    <ul className=\"itemPerPage\">\r\n      {data.map((item, index) => {\r\n        return <li key={index}>{item.title}</li>;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nconst Pagination = () => {\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemPerPage, setItemPerPage] = useState(10);\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(data.length / itemPerPage); i++) {\r\n    pages.push(i);\r\n  }\r\n  const indexOfLastItem = currentPage * itemPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemPerPage;\r\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n  const [maxNumberLimit, setMaxNumberLimit] = useState(5);\r\n  const [minNumberLimit, setMinNumberLimit] = useState(0);\r\n  const [pageNumberLimit, setPageNumberLimit] = useState(5);\r\n  const rederPageNumber = pages.map((number, index) => {\r\n    if (number < maxNumberLimit + 1 && number > minNumberLimit) {\r\n      return (\r\n        <li\r\n          style={{\r\n            padding: \"5px\",\r\n            background: \"red\",\r\n            color: \"#fff\",\r\n            marginLeft: \"2px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          className={currentPage === number ? \"active\" : null}\r\n          key={index}\r\n          onClick={() => handleClick(number)}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n  const handleClick = (number) => {\r\n    setCurrentPage(number);\r\n  };\r\n  const handleClickNext = () => {\r\n    setCurrentPage(currentPage + 1);\r\n    if (currentPage + 1 > maxNumberLimit) {\r\n      setMaxNumberLimit(maxNumberLimit + pageNumberLimit);\r\n      setMinNumberLimit(minNumberLimit + pageNumberLimit);\r\n    }\r\n  };\r\n  const handleClickPrev = () => {\r\n    setCurrentPage(currentPage - 1);\r\n    if ((currentPage - 1) % pageNumberLimit === 0) {\r\n      setMaxNumberLimit(maxNumberLimit - pageNumberLimit);\r\n      setMinNumberLimit(minNumberLimit - pageNumberLimit);\r\n    }\r\n  };\r\n  let btnIncre = null;\r\n  if (pages.length > maxNumberLimit) {\r\n    btnIncre = <li onClick={handleClickNext}>&hellip;</li>;\r\n  }\r\n  let btnDecre = null;\r\n  if (minNumberLimit >= 1) {\r\n    btnDecre = <li onClick={handleClickPrev}>&hellip;</li>;\r\n  }\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n      .then((respon) => respon.json())\r\n      .then((json) => setData(json));\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {renderData(currentItems)}\r\n      <div style={{ display: \"flex\" }}>\r\n        <button disabled={currentPage <= 1} onClick={() => handleClickPrev()}>\r\n          Prev\r\n        </button>\r\n        {btnDecre}\r\n        {rederPageNumber}\r\n        {btnIncre}\r\n        <button\r\n          disabled={currentPage >= pages.length}\r\n          onClick={() => handleClickNext()}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import \"./App.css\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Todo Pagination</h1>\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}